pipeline {
  agent {
    kubernetes {
      label 'mypod'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:
  - name: maven
    image: maven:3.3.9-jdk-8-alpine
    command: ['cat']
    tty: true
  - name: node
    image: node:6-alpine
    command: ['cat']
    tty: true
  - name: golang
    image: golang:1.10
    command:
    - cat
    tty: true
  - name: gcloud
    image: gcr.io/cloud-builders/gcloud
    command:
    - cat
    tty: true
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    command:
    - cat
    tty: true 
 
"""
    }
  }
  
  stages {
    stage('Run maven') {
      steps {
        container('maven') {
           sh 'mvn -version'
        }
      }
    }
    stage('Build') {
            steps {
                container('node') {
                   sh 'npm install' 
             }
            }
        } 
     stage('Test') {
            steps {
               container('node') {
                sh 'npm -version'
              }
            }
        }
     stage('Deliver for development') {
            when {
                branch 'development'
            }
            steps {
                container('golang') {
                sh 'go -version'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh 'ls -l'
              }
            }
        }
        stage('Deploy for production') {
            when {
                branch 'production'
            }
            steps {
                container('kubectl') {
                sh("kubectl get pods")
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh 'kubectl get ns'
              }
            }
        }
}
}
